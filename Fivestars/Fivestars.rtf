{\rtf1\ansi\ansicpg1252\cocoartf1671\cocoasubrtf600
{\fonttbl\f0\fswiss\fcharset0 Helvetica-Oblique;\f1\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\margl1440\margr1440\vieww20780\viewh13680\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\i\fs24 \cf0 ## Candiate Agnes He\
## Fivestars Data Challenge\
## March 8, 2020
\f1\i0 \
\

\f0\i ## Step 1: Explore the database, tables, and relations.\

\f1\i0 \
(SQL Script)\
SELECT * \
FROM public.business_group LIMIT 100;\
\
SELECT * \
FROM public.message LIMIT 100;\
\
SELECT *\
FROM public.promotion LIMIT 100;\
\
SELECT *\
FROM public.perk LIMIT 100;\
\
## Question 1.1: What is the time period covered by the data? Is the entire time window usable? If so why? If not, why not?\
\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0
\cf0 #The min pre_issue_last_visited_datetime appears to be in the year 1970, which is clearly an incorrect data, so I wrote a query to find out the correct date time.\
#The time range covered by the data is from 2011-03-09 to 2018-06-12 over the whole dataset. \
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0
\cf0 #Only the time window \
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0
\cf0 (SQL Script)\
\
SELECT min(pre_issue_last_visited_datetime) AS pre_min,\
       max(pre_issue_last_visited_datetime) AS pre_max,\
       min(issued_datetime) AS issue_min,\
       max(issued_datetime) AS issue_max,\
       min(claimed_datetime) AS claim_min,\
       max(claimed_datetime) AS claim_max,\
       min(next_visited_datetime) AS next_min,\
       max(next_visited_datetime) AS next_max,\
       min(redeemed_datetime) AS red_min,\
       max(redeemed_datetime) AS red_max\
FROM public.message\
WHERE pre_issue_last_visited_datetime >\
    (SELECT min(pre_issue_last_visited_datetime)\
     FROM public.message);\
\
\
## Question 1.2: Are there any data quality issues?\
\
(SQL Script)\
\
(SQL Script)\
\
## Question 2: What are the metrics that you would use to evaluate the effectiveness of the messaging campaigns? What are the advantages/disadvantages of each?\
\
## Question 3: Look at effectiveness (as defined by the metric(s) you defined above) as a function of the following variables (both independently and jointly). What do you see? What do you think is driving the distributions you see? What are your recommendations based on what you see?\
\
##Campaign Type and Campaign Name\
\
#Count for campaign_names\
\
(SQL Script)\
\
SELECT count(1),\
       campaign_name\
FROM public.message\
GROUP BY campaign_name;\
\
# Count for campaign_types\
\
(SQL Script)\
\
SELECT count(1),\
       campaign_type\
FROM public.message\
GROUP BY campaign_type;\
\
# Get the metrics for campaign name\
\
(SQL Script)\
\
SELECT count(1) AS total,\
       count(redeemed_datetime) AS redeemed,\
       round(100*redeemed::numeric/total::numeric,2) AS redemption_rate,\
       count(claimed_datetime) AS claimed,\
       round(100*claimed::numeric/total::numeric,2) AS claim_rate,\
       count(next_visited_datetime) AS next_visited,\
       round(100*next_visited::numeric/total::numeric,2) AS next_visit_rate,\
       campaign_name\
FROM public.message\
GROUP BY campaign_name;\
\
# Get the metrics for campaign types\
\
(SQL Script)\
\
SELECT count(1) AS total,\
       count(redeemed_datetime) AS redeemed,\
       round(100*redeemed::numeric/total::numeric,2) AS redemption_rate,\
       count(claimed_datetime) AS claimed,\
       round(100*claimed::numeric/total::numeric,2) AS claim_rate,\
       count(next_visited_datetime) AS next_visited,\
       round(100*next_visited::numeric/total::numeric,2) AS next_visit_rate,\
       campaign_type\
FROM public.message\
GROUP BY campaign_type;\
\
##Days from last visit to message send\
\
##Message Channel\
#Get metrics for message channel\
\
(SQL Script)\
\
SELECT count(1) AS total,\
       count(redeemed_datetime) AS redeemed,\
       round(100*redeemed::numeric/total::numeric,2) AS redemption_rate,\
       count(claimed_datetime) AS claimed,\
       round(100*claimed::numeric/total::numeric,2) AS claim_rate,\
       count(next_visited_datetime) AS next_visited,\
       round(100*next_visited::numeric/total::numeric,2) AS next_visit_rate,\
       message_channel\
FROM public.message\
GROUP BY message_channel;\
\
##Perk \'91Days Active\'92 or effective duration of the promotion\
\
(SQL Script)\
\
SELECT count(1) AS total,\
       count(sub.redeemed_datetime) AS redeemed,\
       round(100*redeemed::numeric/total::numeric,2) AS redemption_rate,\
       count(sub.claimed_datetime) AS claimed,\
       round(100*claimed::numeric/total::numeric,2) AS claim_rate,\
       count(sub.next_visited_datetime) AS next_visited,\
       round(100*next_visited::numeric/total::numeric,2) AS next_visit_rate,\
       sub.days_active\
FROM (select *, datediff(day, promotion_start_date, promotion_expiration_date) as days_active\
from public.message) sub\
GROUP BY sub.days_active;\
\
##Day-of-week when the message was sent\
\
(SQL Script)\
\
SELECT count(1) AS total,\
       count(sub.redeemed_datetime) AS redeemed,\
       round(100*redeemed::numeric/total::numeric,2) AS redemption_rate,\
       count(sub.claimed_datetime) AS claimed,\
       round(100*claimed::numeric/total::numeric,2) AS claim_rate,\
       count(sub.next_visited_datetime) AS next_visited,\
       round(100*next_visited::numeric/total::numeric,2) AS next_visit_rate,\
      (CASE\
            WHEN sub.day_of_week = 0 then 'Sunday'\
            WHEN sub.day_of_week = 1 then 'Monday'\
            WHEN sub.day_of_week = 2 then 'Tuesday'\
            WHEN sub.day_of_week = 3 then 'Wednesday'\
            WHEN sub.day_of_week = 4 then 'Thursday'\
            WHEN sub.day_of_week = 5 then 'Friday'\
            ELSE 'Satuarday'\
            END) as day_of_week\
FROM\
  (SELECT *,\
          datepart(dw, issued_datetime) AS day_of_week\
   FROM public.message) sub\
GROUP BY sub.day_of_week\
ORDER BY sub.day_of_week;\
\
##Extra credit: offer message\
\
(SQL Script)\
\
with msg as(select m.*, sub.*\
from public.message m\
left join (select p.id, pk.days_active, pk.shortname \
          from public.promotion p\
          left join public.perk pk\
          on p.perk_id = pk.id) sub\
on m.promotion_id = sub.id)\
\
SELECT count(1) AS total,\
       count(sub.redeemed_datetime) AS redeemed,\
       round(100*redeemed::numeric/total::numeric,2) AS redemption_rate,\
       count(sub.claimed_datetime) AS claimed,\
       round(100*claimed::numeric/total::numeric,2) AS claim_rate,\
       count(sub.next_visited_datetime) AS next_visited,\
       round(100*next_visited::numeric/total::numeric,2) AS next_visit_rate,\
       sub.perk_type\
FROM (select *, (case when shortname ilike '%Buy%' then 'Buy then get'\
            when shortname ilike '%Free%' then 'free item'\
            when shortname ilike '%off%' then 'Price Off'\
            else 'others' end) as perk_type\
            from msg) sub\
GROUP BY sub.perk_type;\
\
\
\
\
\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0
\cf0 \
\
}